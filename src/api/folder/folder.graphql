extend type Query {
  Folder(id: ID!): Folder!
  Folders: [Folder]
  #usersByOrg(id: String!): [User]!
}

type Folder {
  id: ID!
  name: String!
  createdAt: String
  updatedAt: String
  organisationID: ID
  active: Boolean
  approval: Boolean
  folderProperties: [FolderProperty]
}

extend type Mutation {
  createFolder(data: CreateFolderInput): FolderPayload!
  deleteFolder(data: DeleteFolderInput!): FolderPayload!
  updateFolder(data: UpdateFolderInput!): FolderPayload!
}

input CreateFolderInput {
  name: String!
  approval: Boolean
}

input DeleteFolderInput {
  id: ID!
}

input GetFolderInput {
  id: ID!
}

input UpdateFolderInput {
  id: ID!
  name: String
}

type FolderPayload {
  folder: Folder!
}
